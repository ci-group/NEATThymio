	
	
	Thymio Project Documentation
	
		A total beginners guide to the galaxy


	Itinerary
		
		0.	Format
		1.	Setting up
		2.	Logging in
		3.	Executing Scripts
		4.	Synchronizing files
		5.	Clean Install (Setting up a Thymio-Pi combination from scratch)
		6.	Setting up PI Wifi
		7.	Using the logs

		
	0. Format

		1.	All points are explained in a sequential matter 
		e.g.	1,2,3

		2.	Abbriviasions used are
			e.g.	-	Which stands for exempli gratiƒÅ and is a fancy word for 'for example'
			cmd	-	Stands for command, this is followed by a terminal command
			pwd	-	Means password
			!!!	-	As I'm sure you don't know this stands for PAY ATTENTION and 
					is usually followed by crucial information or a joke
			PI	-	Short for Raspberry PI

	1. Setting Up

		1.	Make sure you have a UNIX environment terminal to execute the commands needed to communicate with the Raspberry Pi
		e.g.	MAC OSX or Linux

		2.	Connect to the wifi 
			Channel:	Thymionet
			Password:	172luckytulip75B

			This will only work if you're in room P345

		3.	Download the appropriate packages to execute and test the robots

		e.g.	Phyton 2.7 (or up)
			You should be prompted by the terminal what you're missing


	2. Logging In

		1.	Check the I.P. address on the back of the robot you want to use
		e.g.	192.168.1.72

		2.	Connect to the robot with SSH
		cmd	ssh pi@192.168.1.72

		3.	You will be prompted for a password
		pwd	raspberry

		Bonus	To avoid having to put in your password everytime share your public SSH key with the Pi

			Open New Terminal
		cmd	cd ~/.ssh
		cmd	nano id_rsa.pub
			Copy your key
		e.g.	ssh-rsa AAAAB3NzaC1...

			Open Terminal with SSH connection to a PI

		cmd	cd ~/.ssh
		cmd 	nano autorized_keys
			Paste your key below the other ones, make sure there is an enter at the bottom
		cmd	ctrl-o		(save file)
		cmd	ENTER		
		cmd	ctrl-x		(exit file)


	3. Executing Scripts

		External One
		1.	Pick your local booting script
		e.g.	start_one.sh
		
		2.	Execute the script you want
		e.g.	foraging.py
		cmd	./start_one.sh foraging.py 192.168.1.72 1
		!!!	For a reason only god knows the above command requires 3 input parameters
			so fill in your favorite integer after the IP address, above we used 1

		Local Multiple
		1.	Pick your local booting script
		e.g.	start_all.sh
		
		2.	Open bot.txt (in /clean_src)
		
		3.	Type in all IPs of PIs you want to start
		e.g.	192.168.1.52
			192.168.1.72
			192.168.1.62
			
		4.	Execute the script you want
		e.g.	foraging.py
		cmd	./start_all.sh foraging.py


		Other Ways
		1.	Good luck

	4. Synchronize 

		Use rsync to post on the PI
		1.	Pick a robot
		e.g.	192.168.1.52
		
		2.	Pick a file on your laptop
		e.g.	test.txt
		
		3.	Get its path
		e.g.	/home/user/test.txt
		
		4.	Rsync it with the PI	
		cmd	rsync /home/test.txt pi@192.168.1.72:~/

		Use rsync to pull from the PI
		1.	Pick a robot
		e.g.	192.168.1.52
		
		2.	Pick a file on the robot
		e.g.	test.txt
		
		3.	Get its path
		e.g.	~/test.txt
		
		4.	Rsync it from the PI
		cmd	rsync pi@192.168.1.72:~/test.txt /home/user/

		Bonus	Folder instead of single file
		cmd	./* for current folder
		e.g.	rsync ./* pi@192.168.1.52:~/
		
	5.	Clean Install
	
		1. 	Get an SD-card
			Preferably 8GB or more
			
		2. 	Format it
			
		3. 	Install Raspbian on it
			https://www.raspberrypi.org/documentation/installation/installing-images/
			
		4. 	Stick it, the sd that is, in your PI
		
			X.	Find the correct IP address of the PI
			cmd	nmap -sn 192.168.1.0-255
		
		5.	Install the needed packages on your pi
		cmd		sudo apt-get update
		cmd 	sudo apt-get install rsync python-opencv python-numpy python-dbus python-gobject python-picamera dbus dbus-x11
		cmd		sudo apt-get install libboost-dev libqt4-dev qt4-dev-tools libqwt5-qt4-dev libudev-dev cmake g++ git make
		!!!		If the last one does not work try the following commands followed by the above install again
		cmd		sudo apt-get clean
		cmd		sudo apt-get -f install
		
		6.  Download the Aseba images
			https://www.thymio.org/local--files/en:linuxinstall/aseba_1.4.0_armhf.deb
			
		7.	Rsync the .deb file to your pi
		
		8. 	Run the following command
			1.	sudo dpkg -i aseba_1.4.0_armhf.deb
			
		9.	??? 
		
		10.	Profit
		
	6.	Setup PI Wifi
	
		1.	Stick a ETHERNET cable in your PI
		
		2.	Find the correct IP address of the PI
		cmd	nmap -sn 192.168.1.0-255
		
		3.	SSH with your PI
		
		4.	Nano this file 
		cmd nano /etc/network/interfaces
		
		5.	Replace file content with the following
		
			auto wlan0

			auto lo

			iface lo inet loopback
			iface eth0 inet dhcp

			allow-hotplug wlan0
			iface wlan0 inet static
			address 192.168.1.XX
			netmask 255.255.255.0
			gateway 192.168.1.1
			dns-nameservers 8.8.8.8
			wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf
			iface default inet dhcp
		
		!!	REPLACE THE XX WITH YOUR DESIRED IP ADDRESS
		
		6.	Nano this file
		cmd nano /etc/wpa_supplicant/wpa_supplicant.conf
		
		7. Replace file content with the following

			ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
			update_config=1

			network={
					ssid="ThymioNet"
					psk="172luckytulip75B"
					proto=RSN
					key_mgmt=WPA-PSK
					pairwise=CCMP
					auth_alg=OPEN
			}
			
	7.	Using the logs
	
		1.	Go the log directory of your NEATThymio map
		
		2.	Change bots.txt to include the IP of the PI you want the logs off
		!!	Can be multiple IP's
		
		3.	Run get_logs.sh locally
		cmd	./get_logs.sh bots.txt
		
		4.	You will get an error that a map does not exist
		
		5.	Create that map locally
		
		6.	Do point 3 again
		
		7. Either create csv files or visual representations of each NN with
		
			1.	Get the .json file you want
			2.	Put it in the same directory as export_data.py or Neural_net_vis.py
			cmd	python export_data.sh FILE.json 

		
		

		
	
	

